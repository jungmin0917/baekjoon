https://youtu.be/UcjK_k5PLHI 이 영상을 참고하기

php에서 기존 strpos는, 브루트 포스 방식으로 문자열을 찾게 되는데
이는 상당히 느린 검색 방법이다. (O(n*m))

그래서 나온 것이 KMP 알고리즘이다 (O(n+m))

** 불일치가 발생하기 직전까지 같았던 부분은 다시 비교하지 않고 패턴 매칭을 진행하는 것 **
이를 통해 비교 횟수를 줄이고 검색 알고리즘의 효율성을 높일 수 있다.

접두부, 접미부, 경계의 의미를 먼저 알아야 한다.

접두부는 문자열의 왼쪽에서부터 시작
접미부는 문자열의 오른쪽에서부터 시작하여 한 개씩 더 읽어가며 만든다

여기서 접두부와 접미부가 같은 경우 그 부분을 각각 경계라고 부른다

KMP 알고리즘의 순서

1. 경계 찾기
1-1. 찾으려는 패턴을 본문 맨 앞과 비교할 수 있게 둠
1-2. 일부가 일치하지 않는다면, 불일치한 부분을 제외한 직전까지 일치하는 패턴에서 최대의 경계를 찾는다
1-3. 불일치 부분을 제외하고 앞뒤가 같은 (아까 말했던) 경계의 최대 길이가 되는 경계를 찾는다
1-4. 2에서 경계를 찾지 못하거나 모두 불일치할 경우, 처음으로 불일치했던 부분까지 패턴을 이동시킨다

2. 이동경로 테이블 만들기
// 이동경로 테이블이란, 얼마나 이동시켜야 하는지 알 수 있게 하는 테이블
// 일치하는 패턴의 길이: 본문과 찾으려는 패턴을 맨 앞에서부터 비교하여 어느 지점에서부터 불일치가 발생하였다면, 그 직전까지 일치하는 패턴의 길이
// 최대 경계 너비: 본문과 패턴 간에 일치하는 부분에서 경계를 찾고, 그들 중 최대의 길이값
// 이동 거리: 일치하는 패턴의 길이 - 최대 경계 너비

ex) ABACABAAC를 가지고 테이블을 만들어 보자 (여기서 ABACABAAC는 내가 찾으려는 패턴을 말함)
// 일치하는 패턴의 길이가 0일 때
- 본문과 패턴이 처음부터 다르다면, 패턴은 한 칸만 이동시켜야 하므로, 이동거리를 1로 만들기 위해 최대 경계 너비를 -1로 설정한다

// 일치하는 패턴의 길이가 1일 때
- A에서 경계를 찾을 수 없으므로 최대 경계 너비값은 0

// 일치하는 패턴의 길이가 2일 때
- AB에서 경계를 찾을 수 없으므로 최대 경계 너비값은 0

// 일치하는 패턴의 길이가 3일 때
- ABA에서 경계는 A 하나만 나오므로 최대 경계 너비값은 1

// 일치하는 패턴의 길이가 4일 때
- ABAC에서 경계가 없으므로 최대 경계 너비값은 0

// 일치하는 패턴의 길이가 5일 때
- ABACA에서 경계가 A이므로 최대 경계 너비값은 1

// 일치하는 패턴의 길이가 6일 때
- ABACAB에서 경계가 AB이므로 최대 경계 너비값은 2

// 일치하는 패턴의 길이가 7일 때
- ABACABA에서 경계가 ABA이므로 최대 경계 너비값은 3

// 일치하는 패턴의 길이가 8일 때
- ABACABAA에서 경계가 A이므로 최대 경계 너비값은 1

// 일치하는 패턴의 길이가 9일 때
- ABACABAAC에서 경계가 없으므로 최대 경계 너비값은 0

표를 완성하면 다음과 같다

일치하는 패턴의 길이    0   1   2   3   4   5   6   7   8   9
최대 경계 너비         -1   0   0   1   0   1   2   3   1   0


// 먼저 테이블을 만든다

