그래프 이론 문제를 풀기에 앞서, 그래프가 무엇인가에 대해 이해할 필요가 있다.

내 경우는 한붓그리기(다리 건너기 문제)로 접해본 적이 있다.

그래프 이론은 교통문제, 조직문제, 사회구조문제, 최단거리 찾기, 정보체계문제, 자료구조, 컴퓨터구조, 네트워크, 인공지능 등 쓰이는 분야가 무궁무진하다.

그래프(Graph)란, 여러 노드(꼭지점)와 간선으로 연결된 네트워크 또는 자료구조를 말한다.
G = (V, E) 처럼 표현하기도 한다.

그래프(Graph): 노드(Node, Vertex)와 간선(Edge)으로 이루어져 있음
차수(Degree): 해당 노드에 연결된 간선의 수

그래프의 종류
무방향 그래프 / 방향 그래프: 간선에 방향이 있거나 없음
가중치 그래프: 간선에 비용이 할당됨
완전 그래프: 모든 노드가 서로 연결됨
비연결 그래프 / 연결 그래프
순환 그래프 / 비순환 그래프

길찾기(탐색)에는 크게 두 가지 방식이 있다.

깊이우선탐색 (Depth First Search)
- 한 노드의 자식을 끝까지 순회한 후 다른 노드 순회
- 자식 우선
- 스택(LIFO: Last In First Out) 사용

너비우선탐색 (Breadth First Search)
- 한 단계씩 내려가면서 같은 레벨에 있는 노드들을 먼저 순회
- 형제 우선
- 큐(FIFO: First In First Out) 사용


1. 깊이 우선 탐색 (DFS)

- DFS에서는 한 단계에서 pop과 expand를 수행 (LIFO, 스택처럼)
- pop : 스택의 맨 위 노드를 꺼냄
- expand : 지워진 노드의 자식들을 모두 스택에 넣음 -> ?? 뭔지 확인 요망

2. 너비 우선 탐색 (BFS)
- BFS에서는 한 단계에서 dequeue와 enqueue를 수행 (FIFO, 큐처럼)
- dequeue : 큐의 맨 위 노드를 꺼냄
- enqueue : 지워진 노드의 자식들을 모두 큐에 넣음

