
https://hanamon.kr/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-time-complexity-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84/
위의 링크를 참고하자

시간복잡도 Big-O 표기법

빅오 표기법이란, 알고리즘의 효율성을 표기해주는 표기법으로
데이터가 n개 주어졌을 때 연산의 횟수를 나타낸다.

여기서 빅오 표기법은 알고리즘상 최악의 경우 복잡도를 나타낸다
(최악의 경우를 고려하여 대비하는 것이 좋다)

ex) 이진 탐색 (Binary Search)
주어진 데이터가 8개인 경우, 이진 탐색은 8->4->2->1 총 3번의 탐색을 진행한다
8 = 1 * 2^3

주어진 데이터가 n개이고 x번의 탐색을 통해 1이 되는 경우,
n = 1 * 2^x 

여기서 x를 취하면 x = log2N이 된다

가장 빠른 것부터 나열하자면

O(1) < O(logN) < O(N) < O(N*logN) < O(N^2) < O(N^3) < O(2N) < O(N!)

